[{"/Users/sungwoonkim/Desktop/bitflix/src/index.js":"1","/Users/sungwoonkim/Desktop/bitflix/src/components/App.js":"2","/Users/sungwoonkim/Desktop/bitflix/src/components/GlobalStyles.js":"3","/Users/sungwoonkim/Desktop/bitflix/src/components/Header.js":"4","/Users/sungwoonkim/Desktop/bitflix/src/components/Router.js":"5","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/index.js":"6","/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/index.js":"7","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/index.js":"8","/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/index.js":"9","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/SearchContainer.js":"10","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/SearchPresenter.js":"11","/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/DetailContainer.js":"12","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/HomeContainer.js":"13","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/HomePresenter.js":"14","/Users/sungwoonkim/Desktop/bitflix/src/api.js":"15","/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/TvContainer.js":"16","/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/TvPresenter.js":"17","/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/DetailPresenter.js":"18","/Users/sungwoonkim/Desktop/bitflix/src/components/Section.js":"19","/Users/sungwoonkim/Desktop/bitflix/src/components/Message.js":"20","/Users/sungwoonkim/Desktop/bitflix/src/components/Loader.js":"21","/Users/sungwoonkim/Desktop/bitflix/src/components/Poster.js":"22"},{"size":157,"mtime":1606885093649,"results":"23","hashOfConfig":"24"},{"size":185,"mtime":1606885705526,"results":"25","hashOfConfig":"24"},{"size":561,"mtime":1606885085062,"results":"26","hashOfConfig":"24"},{"size":1458,"mtime":1606885086913,"results":"27","hashOfConfig":"24"},{"size":908,"mtime":1606891163892,"results":"28","hashOfConfig":"24"},{"size":82,"mtime":1606885221054,"results":"29","hashOfConfig":"24"},{"size":70,"mtime":1606885700520,"results":"30","hashOfConfig":"24"},{"size":76,"mtime":1606885213964,"results":"31","hashOfConfig":"24"},{"size":82,"mtime":1606885151071,"results":"32","hashOfConfig":"24"},{"size":2167,"mtime":1606958617118,"results":"33","hashOfConfig":"24"},{"size":2573,"mtime":1606958615179,"results":"34","hashOfConfig":"24"},{"size":1707,"mtime":1606894933486,"results":"35","hashOfConfig":"24"},{"size":2143,"mtime":1606886455458,"results":"36","hashOfConfig":"24"},{"size":2995,"mtime":1606888795906,"results":"37","hashOfConfig":"24"},{"size":1007,"mtime":1606885096610,"results":"38","hashOfConfig":"24"},{"size":1109,"mtime":1606892948553,"results":"39","hashOfConfig":"24"},{"size":2650,"mtime":1606892954928,"results":"40","hashOfConfig":"24"},{"size":3202,"mtime":1606894276123,"results":"41","hashOfConfig":"24"},{"size":709,"mtime":1606885098352,"results":"42","hashOfConfig":"24"},{"size":541,"mtime":1606885090042,"results":"43","hashOfConfig":"24"},{"size":362,"mtime":1606885088454,"results":"44","hashOfConfig":"24"},{"size":1780,"mtime":1606885100038,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1oaxkic",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/sungwoonkim/Desktop/bitflix/src/index.js",[],["95","96"],"/Users/sungwoonkim/Desktop/bitflix/src/components/App.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/GlobalStyles.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Header.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Router.js",["97"],"import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"../routes/Home\";\nimport Search from \"../routes/Search\";\nimport TV from \"../routes/TV\";\nimport Detail from \"../routes/Detail\";\n\n// 오직 라우터만 관리하는 컴포넌트가 될 것임.\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      {/* 기본적으로 Switch가 없이 라우터를 배치하면 모든 라우터를 탄다.\n      Switch를 활용하묜 오로지 하나의 라우터만 타게 된다. */}\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/search\" exact component={Search} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/movie/:id\" exact component={Detail} />\n        <Route path=\"/show/:id\" exact component={Detail} />\n      </Switch>\n    </>\n  </Router>\n);\n","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/index.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/index.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/index.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/index.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/SearchContainer.js",["98","99"],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/SearchPresenter.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/DetailContainer.js",["100"],"import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  // 생성자에서 할일\n  // 영화 상세 페이지를 표현해야 하는지 설정한다.\n\n  constructor(props) {\n    super(props);\n\n    const {\n      location: { pathname },\n    } = props;\n\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovies: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    // id 가지고 오기 -> match.params\n    // 만약에 ID가 안들어 오면 Home으로 강제 이동 -> history의 push가 해준다.\n    // 사용자의 요청을 서버가 받고, 재요청 하도록 하는것 : redirect라고 함.\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n\n    const parsedId = parseInt(id);\n\n    // 올바르지 않은 id라면\n    if (isNaN(parsedId)) {\n      // Home으로 redirect\n      return push(\"/\");\n    }\n\n    const { isMovie } = this.state;\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch (error) {\n      this.setState({\n        error: \"아무것도 찾을 수가 없습니다.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result,\n      });\n    }\n  }\n\n  // 함수형 컴포넌트에서 return에 해당한다.\n  render() {\n    const { result, error, loading } = this.state;\n\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/HomeContainer.js",["101","102","103"],"import React from \"react\";\nimport { ThemeConsumer } from \"styled-components\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\n// Container 역할 : 어플리 케이션에서 사용되어지는 기능(함수),상태(State), 이벤트 등을 구현,\n// Presenter(보여지는것)에 전달함\n\nexport default class extends React.Component {\n  // 클래스형 컴포넌트에서 state만들기\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n  // 컴포넌트가 부모 컴포넌드에 마운트 됐을 때 호출되는 함수.\n  // useEffect( () => {} , [] ) 와 같다.\n\n  // useEffect 에서의 비동기 처리와는 다르게 , 클래스형 컴포넌트의 componentDidMount에서의 비동기 처리는 앞에 async 키워드를 붙여주면 된다.\n  async componentDidMount() {\n    try {\n      //data -> results에 원하는 내용이 있었음\n      // data: {results : [{},{},{}....]}\n\n      // data안에 있는 result에 들어있는 값을 nowPlaying 변수에 넣겠다.\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"영화 정보를 찾을 수 없습니다.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  // construdtor; 클래스 생성자\n  // 생성자의 매개변수로 부모컴포넌트의 props가 들어온다.\n\n  constructor(props) {\n    super(props);\n  }\n  //클래스에서 만들어진 변수를 알려주는게 this\n  render() {\n    const { nowPlaying, upcoming, popular, loading, error } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/HomePresenter.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/api.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/TvContainer.js",["104"],"import React from \"react\";\nimport TvPresenter from \"./TvPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n\n    return (\n      <TvPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/TvPresenter.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/DetailPresenter.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Section.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Message.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Loader.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Poster.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":10,"column":1,"nodeType":"111","endLine":25,"endColumn":3},{"ruleId":"109","severity":1,"message":"112","line":5,"column":1,"nodeType":"111","endLine":88,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":68,"column":3,"nodeType":"115","messageId":"116","endLine":70,"endColumn":4},{"ruleId":"109","severity":1,"message":"112","line":5,"column":1,"nodeType":"111","endLine":70,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":23},{"ruleId":"109","severity":1,"message":"112","line":9,"column":1,"nodeType":"111","endLine":73,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":56,"column":3,"nodeType":"115","messageId":"116","endLine":58,"endColumn":4},{"ruleId":"109","severity":1,"message":"112","line":5,"column":1,"nodeType":"111","endLine":57,"endColumn":2},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous class","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'ThemeConsumer' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]