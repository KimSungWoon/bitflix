[{"/Users/sungwoonkim/Desktop/bitflix/src/index.js":"1","/Users/sungwoonkim/Desktop/bitflix/src/components/App.js":"2","/Users/sungwoonkim/Desktop/bitflix/src/components/GlobalStyles.js":"3","/Users/sungwoonkim/Desktop/bitflix/src/components/Header.js":"4","/Users/sungwoonkim/Desktop/bitflix/src/components/Router.js":"5","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/index.js":"6","/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/index.js":"7","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/index.js":"8","/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/index.js":"9","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/SearchContainer.js":"10","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/SearchPresenter.js":"11","/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/DetailContainer.js":"12","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/HomeContainer.js":"13","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/HomePresenter.js":"14","/Users/sungwoonkim/Desktop/bitflix/src/api.js":"15","/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/TvContainer.js":"16","/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/TvPresenter.js":"17","/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/DetailPresenter.js":"18","/Users/sungwoonkim/Desktop/bitflix/src/components/Section.js":"19","/Users/sungwoonkim/Desktop/bitflix/src/components/Message.js":"20","/Users/sungwoonkim/Desktop/bitflix/src/components/Loader.js":"21","/Users/sungwoonkim/Desktop/bitflix/src/components/Poster.js":"22"},{"size":157,"mtime":1606885093649,"results":"23","hashOfConfig":"24"},{"size":185,"mtime":1606885705526,"results":"25","hashOfConfig":"24"},{"size":561,"mtime":1606885085062,"results":"26","hashOfConfig":"24"},{"size":1458,"mtime":1606885086913,"results":"27","hashOfConfig":"24"},{"size":908,"mtime":1606891163892,"results":"28","hashOfConfig":"24"},{"size":82,"mtime":1606885221054,"results":"29","hashOfConfig":"24"},{"size":70,"mtime":1606885700520,"results":"30","hashOfConfig":"24"},{"size":76,"mtime":1606885213964,"results":"31","hashOfConfig":"24"},{"size":82,"mtime":1606885151071,"results":"32","hashOfConfig":"24"},{"size":2167,"mtime":1606959667144,"results":"33","hashOfConfig":"24"},{"size":2573,"mtime":1606959674425,"results":"34","hashOfConfig":"24"},{"size":1684,"mtime":1606961496367,"results":"35","hashOfConfig":"24"},{"size":2143,"mtime":1606886455458,"results":"36","hashOfConfig":"24"},{"size":2995,"mtime":1606888795906,"results":"37","hashOfConfig":"24"},{"size":1007,"mtime":1606885096610,"results":"38","hashOfConfig":"24"},{"size":1109,"mtime":1606959664969,"results":"39","hashOfConfig":"24"},{"size":2650,"mtime":1606959663670,"results":"40","hashOfConfig":"24"},{"size":3202,"mtime":1606961491431,"results":"41","hashOfConfig":"24"},{"size":709,"mtime":1606885098352,"results":"42","hashOfConfig":"24"},{"size":541,"mtime":1606885090042,"results":"43","hashOfConfig":"24"},{"size":362,"mtime":1606885088454,"results":"44","hashOfConfig":"24"},{"size":1780,"mtime":1606885100038,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1oaxkic",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"/Users/sungwoonkim/Desktop/bitflix/src/index.js",[],["96","97"],"/Users/sungwoonkim/Desktop/bitflix/src/components/App.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/GlobalStyles.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Header.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Router.js",["98"],"import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"../routes/Home\";\nimport Search from \"../routes/Search\";\nimport TV from \"../routes/TV\";\nimport Detail from \"../routes/Detail\";\n\n// 오직 라우터만 관리하는 컴포넌트가 될 것임.\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      {/* 기본적으로 Switch가 없이 라우터를 배치하면 모든 라우터를 탄다.\n      Switch를 활용하묜 오로지 하나의 라우터만 타게 된다. */}\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/search\" exact component={Search} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/movie/:id\" exact component={Detail} />\n        <Route path=\"/show/:id\" exact component={Detail} />\n      </Switch>\n    </>\n  </Router>\n);\n","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/index.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/index.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/index.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/index.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/SearchContainer.js",["99","100"],"import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  // submit\n  handleSubmit = (event) => {\n    // form에서 submit이 작동은 하는데, 원래 하고자 했던 이벤트를 취소한다.\n    event.preventDefault();\n    const { searchTerm } = this.state;\n\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  // update -> onChange에서 일어날 이벤트\n  updateTerm = (event) => {\n    const {\n      target: { value: searchTerm },\n    } = event;\n\n    this.setState({ searchTerm });\n  };\n\n  // search -> 검색어를 넣은 api 호출\n  //  이벤트가 일어났을 때 비동기로 호출\n  searchByTerm = async () => {\n    // 1. 검색어 가져오기\n    const { searchTerm } = this.state;\n\n    // 2. loading 설정하기\n    this.setState({ loading: true });\n\n    // 3. 실제 api 호출하기\n    // 데이터의 응답 형태 : { data : { results : [ {}, {}, {}, ...] } }\n    try {\n      // moviesApi.search -> movieResults에 담기\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n\n      // tvApi.search -> tvResults에 담기\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n\n      this.setState({ movieResults, tvResults });\n    } catch (error) {\n      this.setState({\n        error: \"결과를 찾을 수 없습니다.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  // 함수형 컴포넌트에서 return에 해당된다.\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","/Users/sungwoonkim/Desktop/bitflix/src/routes/Search/SearchPresenter.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/DetailContainer.js",["101"],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/HomeContainer.js",["102","103","104"],"import React from \"react\";\nimport { ThemeConsumer } from \"styled-components\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\n// Container 역할 : 어플리 케이션에서 사용되어지는 기능(함수),상태(State), 이벤트 등을 구현,\n// Presenter(보여지는것)에 전달함\n\nexport default class extends React.Component {\n  // 클래스형 컴포넌트에서 state만들기\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n  // 컴포넌트가 부모 컴포넌드에 마운트 됐을 때 호출되는 함수.\n  // useEffect( () => {} , [] ) 와 같다.\n\n  // useEffect 에서의 비동기 처리와는 다르게 , 클래스형 컴포넌트의 componentDidMount에서의 비동기 처리는 앞에 async 키워드를 붙여주면 된다.\n  async componentDidMount() {\n    try {\n      //data -> results에 원하는 내용이 있었음\n      // data: {results : [{},{},{}....]}\n\n      // data안에 있는 result에 들어있는 값을 nowPlaying 변수에 넣겠다.\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"영화 정보를 찾을 수 없습니다.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  // construdtor; 클래스 생성자\n  // 생성자의 매개변수로 부모컴포넌트의 props가 들어온다.\n\n  constructor(props) {\n    super(props);\n  }\n  //클래스에서 만들어진 변수를 알려주는게 this\n  render() {\n    const { nowPlaying, upcoming, popular, loading, error } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/Users/sungwoonkim/Desktop/bitflix/src/routes/Home/HomePresenter.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/api.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/TvContainer.js",["105"],"import React from \"react\";\nimport TvPresenter from \"./TvPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n\n    return (\n      <TvPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/Users/sungwoonkim/Desktop/bitflix/src/routes/TV/TvPresenter.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/routes/Detail/DetailPresenter.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Section.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Message.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Loader.js",[],"/Users/sungwoonkim/Desktop/bitflix/src/components/Poster.js",[],["106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":10,"column":1,"nodeType":"114","endLine":25,"endColumn":3},{"ruleId":"112","severity":1,"message":"115","line":5,"column":1,"nodeType":"114","endLine":88,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":68,"column":3,"nodeType":"118","messageId":"119","endLine":70,"endColumn":4},{"ruleId":"112","severity":1,"message":"115","line":5,"column":1,"nodeType":"114","endLine":67,"endColumn":2},{"ruleId":"120","severity":1,"message":"121","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":23},{"ruleId":"112","severity":1,"message":"115","line":9,"column":1,"nodeType":"114","endLine":73,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":56,"column":3,"nodeType":"118","messageId":"119","endLine":58,"endColumn":4},{"ruleId":"112","severity":1,"message":"115","line":5,"column":1,"nodeType":"114","endLine":57,"endColumn":2},{"ruleId":"108","replacedBy":"124"},{"ruleId":"110","replacedBy":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous class","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'ThemeConsumer' is defined but never used.","Identifier","unusedVar",["126"],["127"],"no-global-assign","no-unsafe-negation"]